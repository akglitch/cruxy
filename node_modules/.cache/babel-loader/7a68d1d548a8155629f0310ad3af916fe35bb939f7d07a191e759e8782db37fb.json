{"ast":null,"code":"import $tyW6A$react, { useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef } from \"react\";\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n  return null;\n}\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  let {\n    childItems: childItems,\n    title: title,\n    children: children\n  } = props;\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  yield {\n    type: 'item',\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n    *childNodes() {\n      if (childItems) for (let child1 of childItems) yield {\n        type: 'item',\n        value: child1\n      };else if (title) {\n        let items = [];\n        $tyW6A$react.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && $tyW6A$react.Children.count(props.children) > 0) return true;\n  return false;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\nfunction $9fc4852771d079eb$var$Section(props) {\n  return null;\n}\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  let {\n    children: children,\n    title: title,\n    items: items1\n  } = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items1) throw new Error('props.children was a function but props.items is missing');\n        for (let item of items1) yield {\n          type: 'item',\n          value: item,\n          renderer: children\n        };\n      } else {\n        let items = [];\n        $tyW6A$react.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\n// We don't want getCollectionNode to show up in the type definition\nlet $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\nclass $eb2240fc39a57fa5$export$bf788dd355e3a401 {\n  build(props, context) {\n    this.context = context;\n    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));\n  }\n  *iterateCollection(props) {\n    let {\n      children: children,\n      items: items\n    } = props;\n    if (typeof children === 'function') {\n      if (!items) throw new Error('props.children was a function but props.items is missing');\n      for (let item of props.items) yield* this.getFullNode({\n        value: item\n      }, {\n        renderer: children\n      });\n    } else {\n      let items = [];\n      $tyW6A$react.Children.forEach(children, child => {\n        items.push(child);\n      });\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n  getKey(item, partialNode, state, parentKey) {\n    if (item.key != null) return item.key;\n    if (partialNode.type === 'cell' && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n    let v = partialNode.value;\n    if (v != null) {\n      var _key;\n      let key = (_key = v.key) !== null && _key !== void 0 ? _key : v.id;\n      if (key == null) throw new Error('No key found for item');\n      return key;\n    }\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n  getChildState(state, partialNode) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n  *getFullNode(partialNode, state, parentKey, parentNode) {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n      element = state.renderer(partialNode.value);\n    }\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if ($tyW6A$react.isValidElement(element)) {\n      let type = element.type;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n      let childNodes = type.getCollectionNode(element.props, this.context);\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n        partialNode.index = index;\n        let nodeKey = childNode.key;\n        if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index: index,\n          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) this.cache.set(node.value, node);\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n          index++;\n          yield node;\n        }\n        result = childNodes.next(children);\n      }\n      return;\n    }\n    // Ignore invalid elements\n    if (partialNode.key == null) return;\n    // Create full node\n    let builder = this;\n    let node = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n        if (!partialNode.hasChildNodes) return;\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null)\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node1 of nodes) {\n            index++;\n            yield node1;\n          }\n        }\n      })\n    };\n    yield node;\n  }\n  constructor() {\n    this.cache = new WeakMap();\n  }\n}\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) yield item;\n      if (!iterable) iterable = iterator();\n      for (let item1 of iterable) {\n        cache.push(item1);\n        yield item1;\n      }\n    }\n  };\n}\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return element => outer(inner(element));\n  if (outer) return outer;\n  if (inner) return inner;\n}\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  let invalidators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let builder = $tyW6A$useMemo(() => new $eb2240fc39a57fa5$export$bf788dd355e3a401(), []);\n  let prev = $tyW6A$useRef(null);\n  return $tyW6A$useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n    // Don't invalidate when any prop changes, just the two we care about.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  let count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n  for (let item of collection) if (item.type === 'section') count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);else count++;\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\nexport { $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"mappings":"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","names":["$c1d7fb2ec91bae71$var$Item","props","getCollectionNode","context","childItems","title","children","rendered","textValue","suppressTextValueWarning","console","warn","type","hasChildNodes","$c1d7fb2ec91bae71$var$hasChildItems","childNodes","child1","value","items","$tyW6A$react","Children","forEach","child","push","element","hasChildItems","count","$c1d7fb2ec91bae71$export$6d08773d2e66f8f2","$9fc4852771d079eb$var$Section","items1","Error","item","renderer","$9fc4852771d079eb$export$6e2c8f0811a474ce","$eb2240fc39a57fa5$export$bf788dd355e3a401","build","$eb2240fc39a57fa5$var$iterable","iterateCollection","getFullNode","index","nodes","node","getKey","partialNode","state","parentKey","key","v","_key","id","getChildState","parentNode","cached","cache","get","shouldInvalidate","isValidElement","name","result","next","done","childNode","nodeKey","wrapper","$eb2240fc39a57fa5$var$compose","set","$eb2240fc39a57fa5$var$capitalize","builder","level","node1","WeakMap","iterator","iterable","Symbol","item1","outer","inner","str","toUpperCase","slice","$7613b1592d41b092$export$6cd28814d92fa9c9","factory","invalidators","$tyW6A$useMemo","prev","$tyW6A$useRef","current","$453cc9f0df89c0a5$var$cache","$453cc9f0df89c0a5$export$77d5aafae4e095b2","collection"],"sources":["/home/kaytee/Desktop/crux/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/Item.ts","/home/kaytee/Desktop/crux/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/Section.ts","/home/kaytee/Desktop/crux/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/CollectionBuilder.ts","/home/kaytee/Desktop/crux/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/useCollection.ts","/home/kaytee/Desktop/crux/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/getItemCount.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key;\n        if (!nodeKey) {\n          nodeKey = childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}