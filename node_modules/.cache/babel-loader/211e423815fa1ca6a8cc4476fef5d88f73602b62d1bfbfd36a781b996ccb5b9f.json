{"ast":null,"code":"import { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale, useLocalizedStringFormatter as $cVkRF$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nclass $d1c300d9c497e402$export$de9feff04fda126e {\n  isCell(node) {\n    return node.type === 'cell';\n  }\n  isRow(node) {\n    return node.type === 'row' || node.type === 'item';\n  }\n  findPreviousKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n  findNextKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) key = startItem.parentKey;\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') return key;\n    }\n  }\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) key = startItem.parentKey;\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') return key;\n    }\n  }\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[children.length - 1].key : children[0].key;\n    }\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl' ? children[item.index - 1] : children[item.index + 1];\n      if (next) return next.key;\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl' ? children[0].key : children[children.length - 1].key;\n    }\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl' ? children[item.index + 1] : children[item.index - 1];\n      if (prev) return prev.key;\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') return item.parentKey;\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n  getFirstKey(key, global) {\n    let item;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return;\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n    // Find the first row\n    key = this.findNextKey();\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n    // Otherwise, focus the row itself.\n    return key;\n  }\n  getLastKey(key, global) {\n    let item;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return;\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n    // Find the last row\n    key = this.findPreviousKey();\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n    // Otherwise, focus the row itself.\n    return key;\n  }\n  getItem(key) {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n  getItemRect(key) {\n    var ref;\n    if (this.layout) return (ref = this.layout.getLayoutInfo(key)) === null || ref === void 0 ? void 0 : ref.rect;\n    let item = this.getItem(key);\n    if (item) return new $cVkRF$Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n  }\n  getPageHeight() {\n    var ref, ref1, ref2;\n    if (this.layout) return (ref = this.layout.virtualizer) === null || ref === void 0 ? void 0 : ref.visibleRect.height;\n    return (ref1 = this.ref) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.current) === null || ref2 === void 0 ? void 0 : ref2.offsetHeight;\n  }\n  getContentHeight() {\n    var ref, ref3;\n    if (this.layout) return this.layout.getContentSize().height;\n    return (ref = this.ref) === null || ref === void 0 ? void 0 : (ref3 = ref.current) === null || ref3 === void 0 ? void 0 : ref3.scrollHeight;\n  }\n  getKeyPageAbove(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n    return key;\n  }\n  getKeyPageBelow(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) key = nextKey;\n    }\n    return key;\n  }\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') return [...item.childNodes][0].key;\n          return item.key;\n        }\n      }\n      key = this.findNextKey(key);\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n    return null;\n  }\n  constructor(options) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n}\nconst $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = {\n  \"deselectedItem\": args => `${args.item} غير المحدد`,\n  \"longPressToSelect\": `اضغط مطولًا للدخول إلى وضع التحديد.`,\n  \"select\": `تحديد`,\n  \"selectedAll\": `جميع العناصر المحددة.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `لم يتم تحديد عناصر`,\n    one: () => `${formatter.number(args.count)} عنصر محدد`,\n    other: () => `${formatter.number(args.count)} عنصر محدد`\n  })}.`,\n  \"selectedItem\": args => `${args.item} المحدد`\n};\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = {\n  \"deselectedItem\": args => `${args.item} не е избран.`,\n  \"longPressToSelect\": `Натиснете и задръжте за да влезете в избирателен режим.`,\n  \"select\": `Изберете`,\n  \"selectedAll\": `Всички елементи са избрани.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Няма избрани елементи`,\n    one: () => `${formatter.number(args.count)} избран елемент`,\n    other: () => `${formatter.number(args.count)} избрани елементи`\n  })}.`,\n  \"selectedItem\": args => `${args.item} избран.`\n};\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = {\n  \"deselectedItem\": args => `Položka ${args.item} není vybrána.`,\n  \"longPressToSelect\": `Dlouhým stisknutím přejdete do režimu výběru.`,\n  \"select\": `Vybrat`,\n  \"selectedAll\": `Vybrány všechny položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nevybrány žádné položky`,\n    one: () => `Vybrána ${formatter.number(args.count)} položka`,\n    other: () => `Vybráno ${formatter.number(args.count)} položek`\n  })}.`,\n  \"selectedItem\": args => `Vybrána položka ${args.item}.`\n};\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = {\n  \"deselectedItem\": args => `${args.item} ikke valgt.`,\n  \"longPressToSelect\": `Lav et langt tryk for at aktivere valgtilstand.`,\n  \"select\": `Vælg`,\n  \"selectedAll\": `Alle elementer valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer valgt`,\n    one: () => `${formatter.number(args.count)} element valgt`,\n    other: () => `${formatter.number(args.count)} elementer valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valgt.`\n};\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = {\n  \"deselectedItem\": args => `${args.item} nicht ausgewählt.`,\n  \"longPressToSelect\": `Gedrückt halten, um Auswahlmodus zu öffnen.`,\n  \"select\": `Auswählen`,\n  \"selectedAll\": `Alle Elemente ausgewählt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Keine Elemente ausgewählt`,\n    one: () => `${formatter.number(args.count)} Element ausgewählt`,\n    other: () => `${formatter.number(args.count)} Elemente ausgewählt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} ausgewählt.`\n};\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = {\n  \"deselectedItem\": args => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,\n  \"longPressToSelect\": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,\n  \"select\": `Επιλογή`,\n  \"selectedAll\": `Επιλέχθηκαν όλα τα στοιχεία.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Δεν επιλέχθηκαν στοιχεία`,\n    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,\n    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`\n  })}.`,\n  \"selectedItem\": args => `Επιλέχθηκε το στοιχείο ${args.item}.`\n};\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = {\n  \"deselectedItem\": args => `${args.item} not selected.`,\n  \"select\": `Select`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `No items selected`,\n    one: () => `${formatter.number(args.count)} item selected`,\n    other: () => `${formatter.number(args.count)} items selected`\n  })}.`,\n  \"selectedAll\": `All items selected.`,\n  \"selectedItem\": args => `${args.item} selected.`,\n  \"longPressToSelect\": `Long press to enter selection mode.`\n};\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = {\n  \"deselectedItem\": args => `${args.item} no seleccionado.`,\n  \"longPressToSelect\": `Mantenga pulsado para abrir el modo de selección.`,\n  \"select\": `Seleccionar`,\n  \"selectedAll\": `Todos los elementos seleccionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ningún elemento seleccionado`,\n    one: () => `${formatter.number(args.count)} elemento seleccionado`,\n    other: () => `${formatter.number(args.count)} elementos seleccionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seleccionado.`\n};\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = {\n  \"deselectedItem\": args => `${args.item} pole valitud.`,\n  \"longPressToSelect\": `Valikurežiimi sisenemiseks vajutage pikalt.`,\n  \"select\": `Vali`,\n  \"selectedAll\": `Kõik üksused valitud.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Üksusi pole valitud`,\n    one: () => `${formatter.number(args.count)} üksus valitud`,\n    other: () => `${formatter.number(args.count)} üksust valitud`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valitud.`\n};\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = {\n  \"deselectedItem\": args => `Kohdetta ${args.item} ei valittu.`,\n  \"longPressToSelect\": `Siirry valintatilaan painamalla pitkään.`,\n  \"select\": `Valitse`,\n  \"selectedAll\": `Kaikki kohteet valittu.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ei yhtään kohdetta valittu`,\n    one: () => `${formatter.number(args.count)} kohde valittu`,\n    other: () => `${formatter.number(args.count)} kohdetta valittu`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valittu.`\n};\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = {\n  \"deselectedItem\": args => `${args.item} non sélectionné.`,\n  \"longPressToSelect\": `Appuyez de manière prolongée pour passer en mode de sélection.`,\n  \"select\": `Sélectionner`,\n  \"selectedAll\": `Tous les éléments sélectionnés.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Aucun élément sélectionné`,\n    one: () => `${formatter.number(args.count)} élément sélectionné`,\n    other: () => `${formatter.number(args.count)} éléments sélectionnés`\n  })}.`,\n  \"selectedItem\": args => `${args.item} sélectionné.`\n};\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = {\n  \"deselectedItem\": args => `${args.item} לא נבחר.`,\n  \"longPressToSelect\": `הקשה ארוכה לכניסה למצב בחירה.`,\n  \"select\": `בחר`,\n  \"selectedAll\": `כל הפריטים נבחרו.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `לא נבחרו פריטים`,\n    one: () => `פריט ${formatter.number(args.count)} נבחר`,\n    other: () => `${formatter.number(args.count)} פריטים נבחרו`\n  })}.`,\n  \"selectedItem\": args => `${args.item} נבחר.`\n};\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = {\n  \"deselectedItem\": args => `Stavka ${args.item} nije odabrana.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u način odabira.`,\n  \"select\": `Odaberite`,\n  \"selectedAll\": `Odabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije odabrana nijedna stavka`,\n    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Odabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `Stavka ${args.item} je odabrana.`\n};\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = {\n  \"deselectedItem\": args => `${args.item} nincs kijelölve.`,\n  \"longPressToSelect\": `Nyomja hosszan a kijelöléshez.`,\n  \"select\": `Kijelölés`,\n  \"selectedAll\": `Az összes elem kijelölve.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Egy elem sincs kijelölve`,\n    one: () => `${formatter.number(args.count)} elem kijelölve`,\n    other: () => `${formatter.number(args.count)} elem kijelölve`\n  })}.`,\n  \"selectedItem\": args => `${args.item} kijelölve.`\n};\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = {\n  \"deselectedItem\": args => `${args.item} non selezionato.`,\n  \"longPressToSelect\": `Premi a lungo per passare alla modalità di selezione.`,\n  \"select\": `Seleziona`,\n  \"selectedAll\": `Tutti gli elementi selezionati.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nessun elemento selezionato`,\n    one: () => `${formatter.number(args.count)} elemento selezionato`,\n    other: () => `${formatter.number(args.count)} elementi selezionati`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selezionato.`\n};\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = {\n  \"deselectedItem\": args => `${args.item} が選択されていません。`,\n  \"longPressToSelect\": `長押しして選択モードを開きます。`,\n  \"select\": `選択`,\n  \"selectedAll\": `すべての項目を選択しました。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `項目が選択されていません`,\n    one: () => `${formatter.number(args.count)} 項目を選択しました`,\n    other: () => `${formatter.number(args.count)} 項目を選択しました`\n  })}。`,\n  \"selectedItem\": args => `${args.item} を選択しました。`\n};\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = {\n  \"deselectedItem\": args => `${args.item}이(가) 선택되지 않았습니다.`,\n  \"longPressToSelect\": `선택 모드로 들어가려면 길게 누르십시오.`,\n  \"select\": `선택`,\n  \"selectedAll\": `모든 항목이 선택되었습니다.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `선택된 항목이 없습니다`,\n    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,\n    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`\n  })}.`,\n  \"selectedItem\": args => `${args.item}이(가) 선택되었습니다.`\n};\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = {\n  \"deselectedItem\": args => `${args.item} nepasirinkta.`,\n  \"longPressToSelect\": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,\n  \"select\": `Pasirinkti`,\n  \"selectedAll\": `Pasirinkti visi elementai.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nepasirinktas nė vienas elementas`,\n    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,\n    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Pasirinkta: ${args.item}.`\n};\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = {\n  \"deselectedItem\": args => `Vienums ${args.item} nav atlasīts.`,\n  \"longPressToSelect\": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,\n  \"select\": `Atlasīt`,\n  \"selectedAll\": `Atlasīti visi vienumi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nav atlasīts neviens vienums`,\n    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,\n    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Atlasīts vienums ${args.item}.`\n};\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = {\n  \"deselectedItem\": args => `${args.item} er ikke valgt.`,\n  \"longPressToSelect\": `Bruk et langt trykk for å gå inn i valgmodus.`,\n  \"select\": `Velg`,\n  \"selectedAll\": `Alle elementer er valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer er valgt`,\n    one: () => `${formatter.number(args.count)} element er valgt`,\n    other: () => `${formatter.number(args.count)} elementer er valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} er valgt.`\n};\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = {\n  \"deselectedItem\": args => `${args.item} niet geselecteerd.`,\n  \"longPressToSelect\": `Druk lang om de selectiemodus te openen.`,\n  \"select\": `Selecteren`,\n  \"selectedAll\": `Alle items geselecteerd.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Geen items geselecteerd`,\n    one: () => `${formatter.number(args.count)} item geselecteerd`,\n    other: () => `${formatter.number(args.count)} items geselecteerd`\n  })}.`,\n  \"selectedItem\": args => `${args.item} geselecteerd.`\n};\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = {\n  \"deselectedItem\": args => `Nie zaznaczono ${args.item}.`,\n  \"longPressToSelect\": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,\n  \"select\": `Zaznacz`,\n  \"selectedAll\": `Wszystkie zaznaczone elementy.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nie zaznaczono żadnych elementów`,\n    one: () => `${formatter.number(args.count)} zaznaczony element`,\n    other: () => `${formatter.number(args.count)} zaznaczonych elementów`\n  })}.`,\n  \"selectedItem\": args => `Zaznaczono ${args.item}.`\n};\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Mantenha pressionado para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Prima continuamente para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = {\n  \"deselectedItem\": args => `${args.item} neselectat.`,\n  \"longPressToSelect\": `Apăsați lung pentru a intra în modul de selectare.`,\n  \"select\": `Selectare`,\n  \"selectedAll\": `Toate elementele selectate.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Niciun element selectat`,\n    one: () => `${formatter.number(args.count)} element selectat`,\n    other: () => `${formatter.number(args.count)} elemente selectate`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selectat.`\n};\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = {\n  \"deselectedItem\": args => `${args.item} не выбрано.`,\n  \"longPressToSelect\": `Нажмите и удерживайте для входа в режим выбора.`,\n  \"select\": `Выбрать`,\n  \"selectedAll\": `Выбраны все элементы.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Нет выбранных элементов`,\n    one: () => `${formatter.number(args.count)} элемент выбран`,\n    other: () => `${formatter.number(args.count)} элементов выбрано`\n  })}.`,\n  \"selectedItem\": args => `${args.item} выбрано.`\n};\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = {\n  \"deselectedItem\": args => `Nevybraté položky: ${args.item}.`,\n  \"longPressToSelect\": `Dlhším stlačením prejdite do režimu výberu.`,\n  \"select\": `Vybrať`,\n  \"selectedAll\": `Všetky vybraté položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Žiadne vybraté položky`,\n    one: () => `${formatter.number(args.count)} vybratá položka`,\n    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Vybraté položky: ${args.item}.`\n};\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = {\n  \"deselectedItem\": args => `Element ${args.item} ni izbran.`,\n  \"longPressToSelect\": `Za izbirni način pritisnite in dlje časa držite.`,\n  \"select\": `Izberite`,\n  \"selectedAll\": `Vsi elementi so izbrani.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Noben element ni izbran`,\n    one: () => `${formatter.number(args.count)} element je izbran`,\n    other: () => `${formatter.number(args.count)} elementov je izbranih`\n  })}.`,\n  \"selectedItem\": args => `Element ${args.item} je izbran.`\n};\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = {\n  \"deselectedItem\": args => `${args.item} nije izabrano.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u režim biranja.`,\n  \"select\": `Izaberite`,\n  \"selectedAll\": `Izabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije izabrana nijedna stavka`,\n    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Izabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `${args.item} je izabrano.`\n};\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = {\n  \"deselectedItem\": args => `${args.item} ej markerat.`,\n  \"longPressToSelect\": `Tryck länge när du vill öppna väljarläge.`,\n  \"select\": `Markera`,\n  \"selectedAll\": `Alla markerade objekt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Inga markerade objekt`,\n    one: () => `${formatter.number(args.count)} markerat objekt`,\n    other: () => `${formatter.number(args.count)} markerade objekt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} markerat.`\n};\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = {\n  \"deselectedItem\": args => `${args.item} seçilmedi.`,\n  \"longPressToSelect\": `Seçim moduna girmek için uzun basın.`,\n  \"select\": `Seç`,\n  \"selectedAll\": `Tüm ögeler seçildi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Hiçbir öge seçilmedi`,\n    one: () => `${formatter.number(args.count)} öge seçildi`,\n    other: () => `${formatter.number(args.count)} öge seçildi`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seçildi.`\n};\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = {\n  \"deselectedItem\": args => `${args.item} не вибрано.`,\n  \"longPressToSelect\": `Виконайте довге натиснення, щоб перейти в режим вибору.`,\n  \"select\": `Вибрати`,\n  \"selectedAll\": `Усі елементи вибрано.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Жодних елементів не вибрано`,\n    one: () => `${formatter.number(args.count)} елемент вибрано`,\n    other: () => `Вибрано елементів: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `${args.item} вибрано.`\n};\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = {\n  \"deselectedItem\": args => `未选择 ${args.item}。`,\n  \"longPressToSelect\": `长按以进入选择模式。`,\n  \"select\": `选择`,\n  \"selectedAll\": `已选择所有项目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未选择项目`,\n    one: () => `已选择 ${formatter.number(args.count)} 个项目`,\n    other: () => `已选择 ${formatter.number(args.count)} 个项目`\n  })}。`,\n  \"selectedItem\": args => `已选择 ${args.item}。`\n};\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = {\n  \"deselectedItem\": args => `未選取「${args.item}」。`,\n  \"longPressToSelect\": `長按以進入選擇模式。`,\n  \"select\": `選取`,\n  \"selectedAll\": `已選取所有項目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未選取任何項目`,\n    one: () => `已選取 ${formatter.number(args.count)} 個項目`,\n    other: () => `已選取 ${formatter.number(args.count)} 個項目`\n  })}。`,\n  \"selectedItem\": args => `已選取「${args.item}」。`\n};\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  let {\n    getRowText = key => {\n      var ref;\n      return (ref = state.collection.getItem(key)) === null || ref === void 0 ? void 0 : ref.textValue;\n    }\n  } = props;\n  let stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = $cVkRF$useRef(selection);\n  $cVkRF$useUpdateEffect(() => {\n    var ref;\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format('selectedItem', {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format('selectedItem', {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format('deselectedItem', {\n          item: removedText\n        }));\n      }\n    }\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || ((ref = lastSelection.current) === null || ref === void 0 ? void 0 : ref.size) > 1) messages.push(selection === 'all' ? stringFormatter.format('selectedAll') : stringFormatter.format('selectedCount', {\n        count: selection.size\n      }));\n    }\n    if (messages.length > 0) $cVkRF$announce(messages.join(' '));\n    lastSelection.current = selection;\n  }, [selection]);\n}\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === 'all' || b === 'all') return res;\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n  return res;\n}\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  let stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  let modality = $cVkRF$useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null) && typeof window !== 'undefined' && 'ontouchstart' in window;\n  let interactionDescription = $cVkRF$useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n    let message = undefined;\n    if (shouldLongPress) message = stringFormatter.format('longPressToSelect');\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n  let descriptionProps = $cVkRF$useDescription(interactionDescription);\n  return descriptionProps;\n}\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {\n  let {\n    isVirtualized: isVirtualized,\n    keyboardDelegate: keyboardDelegate,\n    focusMode: focusMode,\n    scrollRef: scrollRef,\n    getRowText: getRowText,\n    onRowAction: onRowAction,\n    onCellAction: onCellAction\n  } = props;\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = $cVkRF$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let delegate = $cVkRF$useMemo(() => keyboardDelegate || new $d1c300d9c497e402$export$de9feff04fda126e({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    focusMode: focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n  let {\n    collectionProps: collectionProps\n  } = $cVkRF$useSelectableCollection({\n    ref: ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  });\n  let id = $cVkRF$useId(props.id);\n  $1af922eb41e03c8f$export$e6235c0d09b995d0.set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  let descriptionProps = $5b9b5b5723db6ae1$export$be42ebdab07ae4c2({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  let domProps = $cVkRF$filterDOMProps(props, {\n    labelable: true\n  });\n  let gridProps = $cVkRF$mergeProps(domProps, {\n    role: 'grid',\n    id: id,\n    'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n  }, state.isKeyboardNavigationDisabled ? {} : collectionProps, descriptionProps);\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n  $92599c3fd427b763$export$137e594ef3218a10({\n    getRowText: getRowText\n  }, state);\n  return {\n    gridProps: gridProps\n  };\n}\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: {\n      onRowAction: onRowAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    direction: direction\n  } = $cVkRF$useLocale();\n  let {\n    keyboardDelegate: keyboardDelegate,\n    actions: {\n      onCellAction: onCellAction\n    }\n  } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = $cVkRF$getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;\n      let focusable = state.selectionManager.childFocusStrategy === 'last' ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n      if (focusable) {\n        $cVkRF$focusSafely(focusable);\n        return;\n      }\n    }\n    if (!ref.current.contains(document.activeElement)) $cVkRF$focusSafely(ref.current);\n  };\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n  let onKeyDownCapture = e => {\n    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled) return;\n    let walker = $cVkRF$getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n    switch (e.key) {\n      case 'ArrowLeft':\n        {\n          // Find the next focusable element within the cell.\n          let focusable = direction === 'rtl' ? walker.nextNode() : walker.previousNode();\n          // Don't focus the cell itself if focusMode is \"child\"\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            let prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'rtl') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          let focusable = direction === 'rtl' ? walker.previousNode() : walker.nextNode();\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            let next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'ltr') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n          break;\n        }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n        break;\n    }\n  };\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = e => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!$cVkRF$isFocusVisible()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    }\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) focus();\n    });\n  };\n  let gridCellProps = $cVkRF$mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDownCapture,\n    onFocus: onFocus\n  });\n  var _colIndex;\n  if (isVirtualized) gridCellProps['aria-colindex'] = ((_colIndex = node.colIndex) !== null && _colIndex !== void 0 ? _colIndex : node.index) + 1; // aria-colindex is 1-based\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  let next;\n  let last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = $cVkRF$useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n  let onChange = () => manager.select(key);\n  const stringFormatter = $cVkRF$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2 as useHighlightSelectionDescription, $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"mappings":"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","names":["$d1c300d9c497e402$export$de9feff04fda126e","isCell","node","type","isRow","findPreviousKey","fromKey","pred","key","collection","getKeyBefore","getLastKey","item","getItem","findNextKey","getKeyAfter","getFirstKey","getKeyBelow","startItem","parentKey","childNodes","index","focusMode","getKeyAbove","getKeyRightOf","children","direction","length","parent","next","getKeyLeftOf","prev","global","ref","current","querySelector","getItemRect","layout","getLayoutInfo","rect","$cVkRF$Rect","offsetLeft","offsetTop","offsetWidth","offsetHeight","getPageHeight","ref1","virtualizer","visibleRect","height","getContentHeight","getContentSize","scrollHeight","getKeyPageAbove","itemRect","pageY","Math","max","maxY","y","getKeyPageBelow","pageHeight","min","nextKey","getKeyForSearch","search","collator","hasWrapped","textValue","substring","slice","compare","options","disabledKeys","$1af922eb41e03c8f$export$e6235c0d09b995d0","WeakMap","$682989befd4f478d$exports","args","formatter","plural","count","one","number","other","$f7fca02019afd941$exports","$8f86f40be75387f1$exports","$db24ba43c8d652ee$exports","$f8f1e72c8b5447d6$exports","$9a73ed2983c3ab0b$exports","$583de0b3587601b9$exports","$147159c978043442$exports","$5cbb62c8a19173ac$exports","$a33d71dc804cc59e$exports","$92d800447793d084$exports","$fe732cdb32124ea8$exports","$e41234e934efb4f5$exports","$1b0393182473bf9e$exports","$2eed782c1c110ce7$exports","$8b5d459f86e9b23c$exports","$1949c3ad17295fd4$exports","$f5e3df4dc8aa7b54$exports","$9dd86690a5c2b2c5$exports","$843964c3bf9a7d24$exports","$73f50e845f9ef3b4$exports","$87f92a7e077514b2$exports","$c28c98d58ee9ff6f$exports","$b6b1503b17b2254d$exports","$8bdaeb71e50c3e1a$exports","$ec2b852dd7c3d1f2$exports","$79e6d900d6a4f82d$exports","$f4c1f0d5d4d03d80$exports","$46252cd87269b10b$exports","$d4d5d8dab362555c$exports","$3d55d1f97c377e83$exports","$5368512f1c703a3f$exports","$f1316b1074463583$exports","$7e60654723031b6f$exports","$1dbe5ffd32adb38c$exports","$92599c3fd427b763$export$137e594ef3218a10","props","state","getRowText","stringFormatter","$cVkRF$useLocalizedStringFormatter","selection","selectionManager","rawSelection","lastSelection","$cVkRF$useRef","$cVkRF$useUpdateEffect","isFocused","addedKeys","$92599c3fd427b763$var$diffSelection","removedKeys","isReplace","selectionBehavior","messages","selectedKeys","size","keys","value","currentSelectionText","push","format","addedText","removedText","selectionMode","$cVkRF$announce","join","a","b","res","Set","has","add","$5b9b5b5723db6ae1$export$be42ebdab07ae4c2","modality","$cVkRF$useInteractionModality","shouldLongPress","window","interactionDescription","$cVkRF$useMemo","message","undefined","hasItemActions","descriptionProps","$cVkRF$useDescription","$83c6e2eafa584c67$export$f6b86a04e5d66d90","isVirtualized","keyboardDelegate","scrollRef","onRowAction","onCellAction","console","warn","$cVkRF$useCollator","usage","sensitivity","$cVkRF$useLocale","delegate","collectionProps","$cVkRF$useSelectableCollection","id","$cVkRF$useId","set","actions","domProps","$cVkRF$filterDOMProps","labelable","gridProps","$cVkRF$mergeProps","role","isKeyboardNavigationDisabled","columnCount","$e45487f8ba1cbdbf$export$d3037f5d3f3e51bf","rowGroupProps","$4159a7a9cbb0cc18$export$96357d5a73f686fa","shouldSelectOnPressUp","onAction","get","itemProps","isPressed","$cVkRF$useSelectableItem","isDisabled","isSelected","rowProps","$ab90dcbc1b5466d0$export$c7e10bfc0c59f67c","focus","treeWalker","$cVkRF$getFocusableTreeWalker","contains","document","activeElement","focusable","childFocusStrategy","$ab90dcbc1b5466d0$var$last","firstChild","$cVkRF$focusSafely","onKeyDownCapture","e","currentTarget","target","walker","currentNode","nextNode","previousNode","preventDefault","stopPropagation","altKey","parentElement","dispatchEvent","KeyboardEvent","nativeEvent","onFocus","$cVkRF$isFocusVisible","setFocusedKey","requestAnimationFrame","gridCellProps","_colIndex","colIndex","last","lastChild","$7cb39d07f245a780$export$70e2eed1a92976ad","manager","checkboxId","canSelectItem","onChange","select","checkboxProps"],"sources":["/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/GridKeyboardDelegate.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/utils.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/ar-AE.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/bg-BG.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/cs-CZ.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/da-DK.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/de-DE.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/el-GR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/en-US.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/es-ES.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/et-EE.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/fi-FI.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/fr-FR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/he-IL.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/hr-HR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/hu-HU.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/it-IT.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/ja-JP.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/ko-KR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/lt-LT.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/lv-LV.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/nb-NO.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/nl-NL.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/pl-PL.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/pt-BR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/pt-PT.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/ro-RO.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/ru-RU.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/sk-SK.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/sl-SI.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/sr-SP.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/sv-SE.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/tr-TR.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/uk-UA.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/zh-CN.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/zh-TW.json","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/intl/*.js","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridSelectionAnnouncement.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useHighlightSelectionDescription.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGrid.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridRowGroup.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridRow.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridCell.ts","/home/kaytee/Desktop/crux/node_modules/@react-aria/grid/dist/packages/@react-aria/grid/src/useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key, useRef} from 'react';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {Key, RefObject, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? {} : collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n        return;\n      }\n\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as FocusableElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}